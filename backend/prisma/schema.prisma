generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Boxer {
  id           Int      @id @default(autoincrement())
  name         String
  country      String
  sex          String?  
  profileImage String?
  club         String?
  province     String?
  age          Int
  weight       Int
  stance       String
  level        String   // e.g. "schoolboy", "schoolgirl", "youth", "junior", "elite"
  fightsWon    Int      @default(0)
  fightsLost   Int      @default(0)
  videoUrl     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations: All contests where this boxer participated
  contestsAsBoxer1 Contest[] @relation("Boxer1Contests")
  contestsAsBoxer2 Contest[] @relation("Boxer2Contests")
}

model Contest {
  id         Int      @id @default(autoincrement())
  date       DateTime @default(now())
  boxer1Id   Int
  boxer2Id   Int
  winnerId   Int?     // Optional: can be null if contest is pending
  result     String?  // Optional: store result details, e.g., "boxer1 won"
  
  boxer1     Boxer    @relation("Boxer1Contests", fields: [boxer1Id], references: [id])
  boxer2     Boxer    @relation("Boxer2Contests", fields: [boxer2Id], references: [id])
  // You can also define a relation for the winner if needed.
}
